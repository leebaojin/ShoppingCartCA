@using ShoppingCartCA.Views.Shared;
@{
    Layout = "_ShopLayout";
    ViewData["Title"] = "Cart";
    List<CartDetail> allcartitem = (List<CartDetail>)ViewData["allcartitem"];
    double totalprice = 0;
    foreach(CartDetail cartitem in allcartitem)
    {
        totalprice += cartitem.Product.Price * cartitem.Quantity;
    }

}
<div class="cart-header">
    <table class="cart-table">
        <tr>
            <td class="cart-table-title">
                My Cart
            </td>
            <td class="cart-table-price">
                Price : $<span id="totalcost">@String.Format("{0:0.00}",totalprice)</span>
            </td>
        </tr>
    </table>
</div>
<br>
<div class="showcart">
    <div>
        @if (allcartitem.Count == 0)
        {
            @:<p>No Items In Cart</p>
        }
        else
        {
    <table class="carttable">
        @{int itemNo = 0;
            foreach (CartDetail cartDetail in allcartitem)
            {
                string priceId = "price-" + itemNo;
                string qtyId = "quantity-" + itemNo;
                string buttonminusId = "minus-" + itemNo;
                string buttonaddId = "add-" + itemNo;
                string cartNoId = "cartno-" + itemNo;

        <tr class="cart-row">
            <td class="itemcell">@Html.Raw(ProductDisplay.DisplayItem(cartDetail.Product))</td>
            <td class="datacell">
                <div>Price : $<span id="@priceId" name="Price" unitprice=@cartDetail.Product.Price>@String.Format("{0:0.00}", cartDetail.Product.Price*cartDetail.Quantity)</span></div>
                <br />
                <div>
                    <input type="button" id="@buttonminusId" onclick="UpdateItem(this)" value="-" />
                    <input type="text" name="Quantity" id="@qtyId" onchange="UpdateItem(this)" class="qtybox" value=@cartDetail.Quantity />
                    <input type="button" id="@buttonaddId" onclick="UpdateItem(this)" value="+" />
                    <input type="hidden" name="CartInfo" id="@cartNoId" value="@cartDetail.Id" />
                </div>
            </td>
        </tr>
                itemNo++;
            }
            }
    </table>
            }
    </div>
</div>



<script type="text/javascript">
    window.onload=function(){

    }

    function UpdateItem(elem) {
        //To search for cart item
        var eleId = elem.id;
        var splitId = eleId.split("-");
        if (splitId.length == 2) {
            var eletrigger = splitId[0];
            var rowId = splitId[1];
        } else {
            return;
        }
        var qtyele = document.getElementById("quantity-" + rowId);
        var newval = parseInt(qtyele.value);
        if (qtyele === null || isNaN(newval)) {
            qtyele.value = qtyele.defaultValue;
            return;
        }
        if (eletrigger === "minus") {
            newval--;
        } else if (eletrigger === "add") {
            newval++;
        } 
        SendCartItem(rowId,newval);
    }

    function SendCartItem(rowId, newval) {
        itemele = document.getElementById("cartno-" + rowId);
        if (itemele === null) {
            window.location.href = "~/Cart";
            return;
        }

        let xhr = new XMLHttpRequest();

        xhr.open("POST", "/Cart/UpdateCartItem");

        xhr.setRequestHeader("Content-Type", "application/json; charset=utf8");

        xhr.onreadystatechange = function () {
            if (this.readyState === XMLHttpRequest.DONE) {
                if (this.status != 200) {
                    return;
                }
            }

            let data = JSON.parse(this.responseText);

            if (data.updateSuccess == false) {
                window.location.href = "/Cart";
                return;
            }
            document.getElementById("totalcost").innerHTML = data.totalprice;
            qtyele = document.getElementById("quantity-" + data.updateRow);
            if (data.removeItem != null) {
                parentrow = qtyele.closest(".cart-row");
                parentrow.parentNode.removeChild(parentrow);
            }
            var x = "price-" + data.updateRow;
            document.getElementById("price-" + data.updateRow).innerHTML = data.price;
            qtyele.value = data.newqty;
            qtyele.defaultValue = data.newqty;
            

        }
        let CartUpdateData = {
            "CartItemId": itemele.value,
            "Newqty": newval,
            "UpdateRow": rowId
        };
        xhr.send(JSON.stringify(CartUpdateData));
    }
    
</script>
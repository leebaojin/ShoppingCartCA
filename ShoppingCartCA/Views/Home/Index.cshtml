@model IEnumerable<ShoppingCartCA.Models.Product>
@using ShoppingCartCA.Views.Shared
@{
    Layout = "_ShopLayout";
    ViewData["Title"] = "Gallery";
    List<Product> products = ViewBag.products;
    string searchStr = (string)ViewData["searchStr"];
}

<style>
    * {
        box-sizing: border-box;
    }


    .hilite {
        background-color: #d696bb;
        color: #fdf5e6;
        font-weight: 600;
    }
</style>
<!-- Load icon library -->
@section StyleScript{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <script type="text/javascript" src="~/js/cartpage.js"></script>
}
<h1>Gallery Page</h1>

<!-- The form -->
<form action="/Home/" method="POST">
    <div class="input-group">
        <div class="form-outline">
            <input placeholder="Search..." id="search-input" type="search" id="form1" class="form-control" name="searchStr" value="@searchStr" />
        </div>
        <button id="search-button" type="submit" class="btn btn-primary">
            <i class="fas fa-search"></i>
        </button>
    </div>
</form>
<p></p>
<table width="100%">
    @{
        if (products.Count == 0)
        {
            @:There are no matches.
        }
        else
        {
            bool opened = false;
            int i;

            for (i = 0; i < products.Count; i++)
            {
                @* 3 images per row *@
                if (i % 3 == 0)
                {
                    @* only close if we are inside one *@
                    if (opened)
                    {
                        @:</tr>
                    }

                    @:</tr>
                    opened = true;
    }

    //string ProductName = Highlight(searchStr, products[i].Name);
    string productName = DisplayAid.DisplaySearch(products[i].Name, searchStr);
    string productDesc = DisplayAid.DisplaySearch(products[i].Desc, searchStr);
    Product product = products[i];

                @:<td width="300px" height="400px">
                      <div class="w3-container">

                          <div class="w3-card-4">
                              <a href='../Home/ProdDetail?prdId=@product.Id'>
                                  <img src="@product.Img" style="width:400px; height: 250px">
                                  <div class="w3-container w3-center">
                                      <h2>@Html.Raw(productName)</h2>
                                      <p>@Html.Raw(productDesc)</p>

                                  </div>
                              </a>
                              <div class="w3-container w3-center">
                                  <p>
                                      @*<button type="submit" class="btn btn-primary" form="nameform" value="Submit">$@product.Price - Add To Cart</button>*@
                                      <button class="btn btn-primary" onclick="AddToCart('@product.Id','1')">$@product.Price - Add To Cart</button>
                                  </p>
                              </div>
                          </div>
                      </div>
                @:</td>
            }

            if (products.Count > 0)
            {
                @* padding if not enough images to form an entire row *@
                while (i % 3 != 0)
                {
                    <td width="400px" height="250px"></td>
                    i++;
                }

                @* close off final row *@
                @:</tr>
            }
        }
    }
</table>

@functions {
    public string Highlight(string searchStr, string subject)
    {
        if (searchStr == "")
        {
            return subject;
        }

        int pos = subject.ToLower().IndexOf(searchStr.ToLower());
        if (pos == -1)
        {
            return subject;
        }

        if (pos == 0)
        {
            return "<span class='hilite'>" + subject.Substring(0, searchStr.Length) +
                "</span>" + subject.Substring(searchStr.Length);
        }
        else
        {
            return subject.Substring(0, pos) +
                "<span class='hilite'>" + subject.Substring(pos, searchStr.Length) +
                "</span>" + subject.Substring(pos + searchStr.Length);
        }
    }
}